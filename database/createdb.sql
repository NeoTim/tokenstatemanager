-- MySQL Script generated by MySQL Workbench
-- Sat Apr 25 19:54:35 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tokenstoredb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tokenstoredb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tokenstoredb` DEFAULT CHARACTER SET utf8 ;
USE `tokenstoredb` ;

-- -----------------------------------------------------
-- Table `tokenstoredb`.`tokenreceived`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tokenstoredb`.`tokenreceived` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `received_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `access_token` VARCHAR(1250) NOT NULL,
  `refresh_token` VARCHAR(1250) NULL,
  `scope` VARCHAR(45) NULL,
  `expires_in` INT NOT NULL,
  `refresh_token_expires_in` INT NULL,
  `token_type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;

USE `tokenstoredb` ;

-- -----------------------------------------------------
-- Placeholder table for view `tokenstoredb`.`token_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tokenstoredb`.`token_table` (`token_received_date` INT, `access_token` INT, `scope` INT, `expires_in` INT, `token_type` INT, `token_valid` INT, `token_expires` INT);

-- -----------------------------------------------------
-- Placeholder table for view `tokenstoredb`.`refresh_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tokenstoredb`.`refresh_table` (`refresh_received_date` INT, `refresh_token` INT, `refresh_token_expires_in` INT, `refresh_valid` INT, `refresh_expires` INT);

-- -----------------------------------------------------
-- View `tokenstoredb`.`token_table`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tokenstoredb`.`token_table`;
USE `tokenstoredb`;
CREATE  OR REPLACE VIEW `token_table` AS
SELECT received_date as token_received_date, access_token, scope, expires_in, token_type, if(DATE_ADD(received_date, INTERVAL expires_in SECOND)>current_timestamp(),'TRUE', 'FALSE') as 
      token_valid, DATE_ADD(received_date, INTERVAL expires_in SECOND) as token_expires
      FROM tokenstoredb.tokenreceived as tokentable order by received_date desc limit 1;

-- -----------------------------------------------------
-- View `tokenstoredb`.`refresh_table`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tokenstoredb`.`refresh_table`;
USE `tokenstoredb`;
CREATE  OR REPLACE VIEW `refresh_table` AS
SELECT received_date as refresh_received_date, refresh_token, refresh_token_expires_in, if(DATE_ADD(received_date, INTERVAL refresh_token_expires_in SECOND)>current_timestamp(),'TRUE', 'FALSE') as refresh_valid, 
      DATE_ADD(received_date, INTERVAL refresh_token_expires_in SECOND) as refresh_expires 
      FROM tokenstoredb.tokenreceived as refreshtable where refresh_token IS NOT NULL order by received_date desc limit 1;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
